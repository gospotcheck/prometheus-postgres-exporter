pg_cache_hit:
  query: "SELECT sum(heap_blks_hit) / (sum(heap_blks_hit) + sum(heap_blks_read)) as ratio FROM pg_statio_user_tables;"
  metrics:
    - ratio:
        usage: "GAUGE"
        description: "Ratio of heap blocks hit to heap blocks read"

pg_replication:
  query: "SELECT extract(epoch from now() - pg_last_xact_replay_timestamp()) as delay_in_sec;"
  metrics:
    - delay_in_sec:
        usage: "GAUGE"
        description: "Seconds behind primary in commits"

pg_transactions:
  query: "SELECT sum(xact_commit+xact_rollback) as count FROM pg_stat_database;"
  metrics:
    - count:
        usage: "COUNTER"
        description: "Number of total transactions at time of query"    

pg_postmaster:
  query: "SELECT pg_postmaster_start_time as start_time_seconds from pg_postmaster_start_time()"
  master: true
  metrics:
    - start_time_seconds:
        usage: "GAUGE"
        description: "Time at which postmaster started"

pg_database:
  query: "SELECT pg_database.datname, pg_database_size(pg_database.datname) as size_bytes FROM postgres_exporter.pg_database where datname not in('postgres','template0','template1')"
  master: true
  cache_seconds: 30
  metrics:
    - datname:
        usage: "LABEL"
        description: "Name of the database"
    - size_bytes:
        usage: "GAUGE"
        description: "Disk space used by the database"

pg_top_queries:
  query: "SELECT statement_timestamp() - query_start elapsed, pid, query FROM pg_stat_activity WHERE NOT lower(query) LIKE '%pg_stat_activity%' AND NOT lower(query) LIKE 'set local%' AND (state != 'idle') AND query !='' ORDER BY statement_timestamp() - query_start DESC"
  metrics:
    - elapsed:
        usage: "GUAGE"
        description: "Estimated time that query is running"
    - pid:
        usage: "LABEL"
        description: "PID of query"
    - query:
        usage: "LABEL"
        description: "Query"