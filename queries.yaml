pg_cache_hit:
  query: "SELECT sum(heap_blks_hit) / (sum(heap_blks_hit) + sum(heap_blks_read)) as ratio FROM pg_statio_user_tables;"
  metrics:
    - ratio:
        usage: "GAUGE"
        description: "Ratio of heap blocks hit to heap blocks read"

pg_replication:
  query: "SELECT CASE WHEN NOT pg_is_in_recovery() THEN 0 ELSE GREATEST (0, EXTRACT(EPOCH FROM (now() - pg_last_xact_replay_timestamp()))) END as delay_in_sec;"
  metrics:
    - delay_in_sec:
        usage: "GAUGE"
        description: "Seconds behind primary in commits"

pg_transactions:
  query: "SELECT sum(xact_commit+xact_rollback) as count FROM pg_stat_database;"
  metrics:
    - count:
        usage: "COUNTER"
        description: "Number of total transactions at time of query"    

pg_postmaster:
  query: "SELECT pg_postmaster_start_time as start_time_seconds from pg_postmaster_start_time()"
  master: true
  metrics:
    - start_time_seconds:
        usage: "GAUGE"
        description: "Time at which postmaster started"

pg_database:
  query: "SELECT pg_database.datname, pg_database_size(pg_database.datname) as size_bytes, age(datfrozenxid) as trx_frozen_id FROM postgres_exporter.pg_database where datname not in('postgres','template0','template1')"
  master: true
  cache_seconds: 30
  metrics:
    - datname:
        usage: "LABEL"
        description: "Name of the database"
    - size_bytes:
        usage: "GAUGE"
        description: "Disk space used by the database"
    - trx_frozen_id:
        usage: "GAUGE"
        description: "Age of oldest transaction ID"

pg_stat_user_tables:
  query: |
   SELECT
     current_database() datname,
     schemaname,
     relname,
     seq_scan,
     seq_tup_read,
     idx_scan,
     idx_tup_fetch,
     n_tup_ins,
     n_tup_upd,
     n_tup_del,
     n_tup_hot_upd,
     n_live_tup,
     n_dead_tup,
     n_mod_since_analyze,
     COALESCE(last_vacuum, '1970-01-01Z') as last_vacuum,
     COALESCE(last_autovacuum, '1970-01-01Z') as last_autovacuum,
     COALESCE(last_analyze, '1970-01-01Z') as last_analyze,
     COALESCE(last_autoanalyze, '1970-01-01Z') as last_autoanalyze,
     vacuum_count,
     autovacuum_count,
     analyze_count,
     autoanalyze_count
   FROM
     pg_stat_user_tables
  metrics:
    - datname:
        usage: "LABEL"
        description: "Name of current database"
    - schemaname:
        usage: "LABEL"
        description: "Name of the schema that this table is in"
    - relname:
        usage: "LABEL"
        description: "Name of this table"
    - seq_scan:
        usage: "COUNTER"
        description: "Number of sequential scans initiated on this table"
    - seq_tup_read:
        usage: "COUNTER"
        description: "Number of live rows fetched by sequential scans"
    - idx_scan:
        usage: "COUNTER"
        description: "Number of index scans initiated on this table"
    - idx_tup_fetch:
        usage: "COUNTER"
        description: "Number of live rows fetched by index scans"
    - n_tup_ins:
        usage: "COUNTER"
        description: "Number of rows inserted"
    - n_tup_upd:
        usage: "COUNTER"
        description: "Number of rows updated"
    - n_tup_del:
        usage: "COUNTER"
        description: "Number of rows deleted"
    - n_tup_hot_upd:
        usage: "COUNTER"
        description: "Number of rows HOT updated (i.e., with no separate index update required)"
    - n_live_tup:
        usage: "GAUGE"
        description: "Estimated number of live rows"
    - n_dead_tup:
        usage: "GAUGE"
        description: "Estimated number of dead rows"
    - n_mod_since_analyze:
        usage: "GAUGE"
        description: "Estimated number of rows changed since last analyze"
    - last_vacuum:
        usage: "GAUGE"
        description: "Last time at which this table was manually vacuumed (not counting VACUUM FULL)"
    - last_autovacuum:
        usage: "GAUGE"
        description: "Last time at which this table was vacuumed by the autovacuum daemon"
    - last_analyze:
        usage: "GAUGE"
        description: "Last time at which this table was manually analyzed"
    - last_autoanalyze:
        usage: "GAUGE"
        description: "Last time at which this table was analyzed by the autovacuum daemon"
    - vacuum_count:
        usage: "COUNTER"
        description: "Number of times this table has been manually vacuumed (not counting VACUUM FULL)"
    - autovacuum_count:
        usage: "COUNTER"
        description: "Number of times this table has been vacuumed by the autovacuum daemon"
    - analyze_count:
        usage: "COUNTER"
        description: "Number of times this table has been manually analyzed"
    - autoanalyze_count:
        usage: "COUNTER"
        description: "Number of times this table has been analyzed by the autovacuum daemon"

pg_top_queries_pid_by_elapsed_time:
  query: |
    WITH
      top AS (
        SELECT 
          datname,
          pid,
          (REGEXP_REPLACE(query, '\/\*.*\*\/\t?\s?', '', 'g'))::varchar(100) short_query,
          EXTRACT(EPOCH FROM statement_timestamp() - query_start) elapsed_time
        FROM 
          postgres_exporter.pg_stat_activity
        WHERE NOT 
          lower(query) LIKE '%pg_stat_activity%'
        AND NOT 
          lower(query) LIKE 'set local%'
        AND 
          (state != 'idle')
        AND 
          query !=''
        ORDER BY statement_timestamp() - query_start DESC
      )
    SELECT
      datname,
      pid,
      short_query,
      elapsed_time
    FROM
      top
  metrics:
    - datname:
        usage: "LABEL"
        description: "Name of current database"
    - pid:
        usage: "LABEL"
        description: "PID of query"
    - short_query:
        usage: "LABEL"
        description: "Short query"
    - elapsed_time:
        usage: "GAUGE"
        description: "Estimated time that query is running"

pg_wal:
  query: "SELECT count(*) wal_count, sum(size) size_bytes FROM postgres_exporter.pg_ls_waldir"
  master: true
  metrics:
    - wal_count:
        usage: "GAUGE"
        description: "Number of the wal files"
    - size_bytes:
        usage: "GAUGE"
        description: "Total disk space of wal used by the database"
